// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  photo String?
}

model Person {
  id              Int          @id @default(autoincrement())
  role            String
  name            String
  timeOff         String?
  maxHoursPerWeek Float
  allocations     Allocation[]
  photo           String?
}

model Project {
  id          Int          @id @default(autoincrement())
  name        String
  startDate   String
  endDate     String
  allocations Allocation[]
}

model Allocation {
  id           Int     @id @default(autoincrement())
  person       Person  @relation(fields: [personId], references: [id])
  personId     Int
  project      Project @relation(fields: [projectId], references: [id])
  projectId    Int
  startDate    String
  endDate      String
  hoursPerWeek Float
  loan         Boolean
}
